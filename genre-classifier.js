// SISTEMA DE CLASSIFICA√á√ÉO AUTOM√ÅTICA DE G√äNEROS MUSICAIS
// Este arquivo cont√©m a l√≥gica para classificar automaticamente g√™neros baseado em artistas

/**
 * üéµ MAPEAMENTO DE ARTISTAS PARA G√äNEROS
 * Base de dados de artistas conhecidos e seus respectivos g√™neros
 */
const ARTIST_GENRE_MAP = {
    // === SERTANEJO ===
    'Bruno e Marrone': 'sertanejo',
    'Chit√£ozinho e Xoror√≥': 'sertanejo', 
    'Chit√£ozinho & Xoror√≥': 'sertanejo',
    'Zez√© Di Camargo e Luciano': 'sertanejo',
    'Zez√© Di Camargo & Luciano': 'sertanejo',
    'Luan Santana': 'sertanejo',
    'Michel Tel√≥': 'sertanejo',
    'Gusttavo Lima': 'sertanejo',
    'Henrique & Juliano': 'sertanejo',
    'Henrique e Juliano': 'sertanejo',
    'Mar√≠lia Mendon√ßa': 'sertanejo',
    'Almir Sater': 'sertanejo',
    'Matheus & Kauan': 'sertanejo',
    'Matheus e Kauan': 'sertanejo',
    'L√©o Magalh√£es': 'sertanejo',
    'Z√© Neto & Cristiano': 'sertanejo',
    'Z√© Neto e Cristiano': 'sertanejo',
    'Gabriel Diniz': 'sertanejo',
    'Fernando & Sorocaba': 'sertanejo',
    'Fernando e Sorocaba': 'sertanejo',
    'Jorge & Mateus': 'sertanejo',
    'Jorge e Mateus': 'sertanejo',
    'Maiara & Maraisa': 'sertanejo',
    'Maiara e Maraisa': 'sertanejo',
    'Simone & Simaria': 'sertanejo',
    'Simone e Simaria': 'sertanejo',

    // === MPB ===
    'Elis Regina': 'mpb',
    'Chico Buarque': 'mpb',
    'Toquinho': 'mpb',
    'Tom Jobim': 'mpb',
    'Jorge Ben Jor': 'mpb',
    'Dorival Caymmi': 'mpb',
    'Milton Nascimento': 'mpb',
    'Marisa Monte': 'mpb',
    'Luiz Gonzaga': 'mpb',
    'Pixinguinha': 'mpb',
    'Caetano Veloso': 'mpb',
    'Gilberto Gil': 'mpb',
    'Maria Beth√¢nia': 'mpb',
    'Gal Costa': 'mpb',
    'Djavan': 'mpb',

    // === ROCK NACIONAL ===
    'Legi√£o Urbana': 'rock',
    'Bar√£o Vermelho': 'rock',
    'Lulu Santos': 'rock',
    'Cazuza': 'rock',
    'Geraldo Vandr√©': 'rock',
    'Skank': 'rock',
    'Capital Inicial': 'rock',
    'Tit√£s': 'rock',
    'Engenheiros do Hawaii': 'rock',
    'Paralamas do Sucesso': 'rock',
    'Kid Abelha': 'rock',
    'Ultraje a Rigor': 'rock',
    'RPM': 'rock',
    'Ira!': 'rock',

    // === PAGODE ===
    'Zeca Pagodinho': 'pagode',
    'P√©ricles': 'pagode',
    'Exaltasamba': 'pagode',
    'Arlindo Cruz': 'pagode',
    'Luiz Carlos da Vila': 'pagode',
    'Sorriso Maroto': 'pagode',
    'Thiaguinho': 'pagode',
    'Naldo': 'pagode',
    'Grupo Revela√ß√£o': 'pagode',
    'Grupo Fundo de Quintal': 'pagode',
    'Jorge Arag√£o': 'pagode',
    'Bezerra da Silva': 'pagode',
    'Ra√ßa Negra': 'pagode',
    'Art Popular': 'pagode',
    'Soweto': 'pagode',

    // === GOSPEL ===
    'Aline Barros': 'gospel',
    'Fernandinho': 'gospel',
    'Kleber Lucas': 'gospel',
    'Gabriela Rocha': 'gospel',
    'Thalles Roberto': 'gospel',
    'Cassiane': 'gospel',
    'Diante do Trono': 'gospel',
    'Anderson Freire': 'gospel',
    'Bruna Karla': 'gospel',
    'Damares': 'gospel',
    'Eyshila': 'gospel',
    'Ludmila Ferber': 'gospel',
    'Minist√©rio Apascentar de Louvor': 'gospel',
    'Renascer Praise': 'gospel',

    // === FUNK ===
    'MC Jo√£o': 'funk',
    'MC Fioti': 'funk',
    'MC Cr√©u': 'funk',
    'MC Loma': 'funk',
    'Psirico': 'funk',
    'MC Kevinho': 'funk',
    'Anitta': 'funk',
    'Valesca Popozuda': 'funk',
    'Os Bar√µes da Pisadinha': 'funk',
    'MC Zaac': 'funk',
    'MC Davi': 'funk',
    'MC Livinho': 'funk',
    'MC Pedrinho': 'funk',
    'MC Hariel': 'funk',
    'MC Don Juan': 'funk',

    // === POP NACIONAL ===
    'Vitor Kley': 'pop',
    'Z√© Felipe': 'pop',
    'Joelma': 'pop',
    'Ivete Sangalo': 'pop',
    'Claudia Leitte': 'pop',
    'Daniela Mercury': 'pop',
    'Sandy': 'pop',
    'Junior': 'pop',
    'Sandy & Junior': 'pop',
    'Sandy e Junior': 'pop',
    'Rouge': 'pop',
    'Kelly Key': 'pop',

    // === INTERNACIONAL ===
    // Rock Cl√°ssico Internacional
    'Queen': 'internacional',
    'The Beatles': 'internacional',
    'Led Zeppelin': 'internacional',
    'Pink Floyd': 'internacional',
    'The Rolling Stones': 'internacional',
    'AC/DC': 'internacional',
    'Guns N\' Roses': 'internacional',
    'Metallica': 'internacional',
    'Iron Maiden': 'internacional',
    'Black Sabbath': 'internacional',
    'Deep Purple': 'internacional',
    'The Who': 'internacional',
    'Eagles': 'internacional',
    'Fleetwood Mac': 'internacional',
    'Journey': 'internacional',
    'Bon Jovi': 'internacional',
    'Aerosmith': 'internacional',
    'U2': 'internacional',
    'Coldplay': 'internacional',
    'Radiohead': 'internacional',
    'Nirvana': 'internacional',
    'Pearl Jam': 'internacional',
    'Red Hot Chili Peppers': 'internacional',
    'Foo Fighters': 'internacional',
    'Green Day': 'internacional',
    'Linkin Park': 'internacional',
    'Oasis': 'internacional',
    'The Killers': 'internacional',
    'Arctic Monkeys': 'internacional',
    'Muse': 'internacional',

    // Pop Internacional Cl√°ssico
    'Michael Jackson': 'internacional',
    'Madonna': 'internacional',
    'Whitney Houston': 'internacional',
    'Celine Dion': 'internacional',
    'Mariah Carey': 'internacional',
    'Elton John': 'internacional',
    'George Michael': 'internacional',
    'Phil Collins': 'internacional',
    'Stevie Wonder': 'internacional',
    'Diana Ross': 'internacional',
    'Tina Turner': 'internacional',
    'Cher': 'internacional',
    'Barbra Streisand': 'internacional',
    'Frank Sinatra': 'internacional',
    'Elvis Presley': 'internacional',
    'John Lennon': 'internacional',
    'Paul McCartney': 'internacional',
    'David Bowie': 'internacional',
    'Prince': 'internacional',
    'Lionel Richie': 'internacional',

    // Pop Internacional Moderno
    'Ed Sheeran': 'internacional',
    'Adele': 'internacional',
    'Taylor Swift': 'internacional',
    'Bruno Mars': 'internacional',
    'Justin Bieber': 'internacional',
    'Justin Timberlake': 'internacional',
    'Rihanna': 'internacional',
    'Beyonc√©': 'internacional',
    'Lady Gaga': 'internacional',
    'Katy Perry': 'internacional',
    'Ariana Grande': 'internacional',
    'Dua Lipa': 'internacional',
    'The Weeknd': 'internacional',
    'Sam Smith': 'internacional',
    'John Legend': 'internacional',
    'Alicia Keys': 'internacional',
    'Christina Aguilera': 'internacional',
    'Britney Spears': 'internacional',
    'Pink': 'internacional',
    'Shakira': 'internacional',
    'Jennifer Lopez': 'internacional',
    'Usher': 'internacional',
    'Chris Brown': 'internacional',
    'Jason Mraz': 'internacional',
    'John Mayer': 'internacional',
    'Shawn Mendes': 'internacional',
    'Camila Cabello': 'internacional',
    'Billie Eilish': 'internacional',
    'Olivia Rodrigo': 'internacional',
    'Harry Styles': 'internacional',
    'Doja Cat': 'internacional',

    // R&B e Soul Internacional
    'Amy Winehouse': 'internacional',
    'Lauryn Hill': 'internacional',
    'Erykah Badu': 'internacional',
    'D\'Angelo': 'internacional',
    'Maxwell': 'internacional',
    'Sade': 'internacional',
    'Seal': 'internacional',
    'Boyz II Men': 'internacional',
    'TLC': 'internacional',
    'Destiny\'s Child': 'internacional',

    // Hip-Hop Internacional
    'Eminem': 'internacional',
    'Jay-Z': 'internacional',
    'Kanye West': 'internacional',
    'Drake': 'internacional',
    '50 Cent': 'internacional',
    'Snoop Dogg': 'internacional',
    'Dr. Dre': 'internacional',
    'Tupac': 'internacional',
    'The Notorious B.I.G.': 'internacional',
    'Nas': 'internacional',
    'Kendrick Lamar': 'internacional',
    'J. Cole': 'internacional',
    'Nicki Minaj': 'internacional',
    'Cardi B': 'internacional',
    'Megan Thee Stallion': 'internacional',

    // M√∫sica Latina Internacional
    'Luis Fonsi': 'internacional',
    'Daddy Yankee': 'internacional',
    'Bad Bunny': 'internacional',
    'J Balvin': 'internacional',
    'Maluma': 'internacional',
    'Ozuna': 'internacional',
    'Karol G': 'internacional',
    'Rosal√≠a': 'internacional',
    'Jesse & Joy': 'internacional',
    'Manu Chao': 'internacional',
    'Manu Chao': 'internacional',
    'Julieta Venegas': 'internacional',
    'Natalia Lafourcade': 'internacional',
    'Mon Laferte': 'internacional',
    '√Ålvaro Soler': 'internacional',
    'Enrique Iglesias': 'internacional',
    'Ricky Martin': 'internacional',
    'Marc Anthony': 'internacional',
    'Gloria Estefan': 'internacional',
    'Selena': 'internacional',

    // Eletr√¥nica Internacional
    'Daft Punk': 'internacional',
    'Calvin Harris': 'internacional',
    'David Guetta': 'internacional',
    'Avicii': 'internacional',
    'Swedish House Mafia': 'internacional',
    'Skrillex': 'internacional',
    'Deadmau5': 'internacional',
    'Ti√´sto': 'internacional',
    'Armin van Buuren': 'internacional',
    'Martin Garrix': 'internacional',
    'The Chainsmokers': 'internacional',
    'Marshmello': 'internacional',
    'Zedd': 'internacional',
    'Diplo': 'internacional',
    'Major Lazer': 'internacional',

    // Indie e Alternativo Internacional
    'Imagine Dragons': 'internacional',
    'OneRepublic': 'internacional',
    'Maroon 5': 'internacional',
    'The Lumineers': 'internacional',
    'Of Monsters and Men': 'internacional',
    'Foster the People': 'internacional',
    'MGMT': 'internacional',
    'Vampire Weekend': 'internacional',
    'Tame Impala': 'internacional',
    'Glass Animals': 'internacional',
    'Alt-J': 'internacional',
    'Two Door Cinema Club': 'internacional',
    'Phoenix': 'internacional',
    'Arcade Fire': 'internacional',
    'The Strokes': 'internacional',

    // Country Internacional
    'Taylor Swift': 'internacional', // Tamb√©m country
    'Carrie Underwood': 'internacional',
    'Keith Urban': 'internacional',
    'Blake Shelton': 'internacional',
    'Kenny Chesney': 'internacional',
    'Tim McGraw': 'internacional',
    'Faith Hill': 'internacional',
    'Shania Twain': 'internacional',
    'Dolly Parton': 'internacional',
    'Johnny Cash': 'internacional',

    // Jazz e Blues Internacional
    'Norah Jones': 'internacional',
    'Diana Krall': 'internacional',
    'Michael Bubl√©': 'internacional',
    'Tony Bennett': 'internacional',
    'Ella Fitzgerald': 'internacional',
    'Louis Armstrong': 'internacional',
    'Miles Davis': 'internacional',
    'John Coltrane': 'internacional',
    'B.B. King': 'internacional',
    'Eric Clapton': 'internacional',

    // Bandas e Grupos Diversos
    'Backstreet Boys': 'internacional',
    'NSYNC': 'internacional',
    'Spice Girls': 'internacional',
    'ABBA': 'internacional',
    'Bee Gees': 'internacional',
    'The Carpenters': 'internacional',
    'Simon & Garfunkel': 'internacional',
    'Hall & Oates': 'internacional',
    'Duran Duran': 'internacional',
    'Depeche Mode': 'internacional',
    'New Order': 'internacional',
    'The Cure': 'internacional',
    'Tears for Fears': 'internacional',
    'Wham!': 'internacional',
    'Culture Club': 'internacional'
};

/**
 * üéØ PALAVRAS-CHAVE PARA CLASSIFICA√á√ÉO AUTOM√ÅTICA
 * Quando n√£o encontrar o artista no mapa, usa palavras-chave do t√≠tulo
 */
const GENRE_KEYWORDS = {
    'sertanejo': [
        'sertanejo', 'mod√£o', 'caipira', 'universit√°rio', 'raiz', 'sofr√™ncia',
        'piseiro', 'arrocha', 'forr√≥', 'xote', 'bai√£o', 'vanera'
    ],
    'mpb': [
        'mpb', 'bossa nova', 'samba', 'choro', 'tropic√°lia', 'jovem guarda',
        'm√∫sica popular brasileira', 'brasil', 'brasileiro', 'brasileira'
    ],
    'funk': [
        'funk', 'baile funk', 'funk carioca', 'montagem', 'putaria',
        'proibid√£o', 'ostenta√ß√£o', 'melody', 'funk melody'
    ],
    'rock': [
        'rock', 'metal', 'punk', 'grunge', 'alternativo', 'indie rock',
        'hard rock', 'heavy metal', 'progressive', 'classic rock'
    ],
    'pagode': [
        'pagode', 'samba', 'partido alto', 'roda de samba', 'cavaquinho',
        'pandeiro', 'surdo', 'tamborim', 'cu√≠ca'
    ],
    'gospel': [
        'gospel', 'crist√£', 'evang√©lica', 'louvor', 'adora√ß√£o', 'hino',
        'jesus', 'deus', 'cristo', 'senhor', 'aleluia', 'hosana'
    ],
    'internacional': [
        // Pop Internacional
        'pop', 'dance', 'disco', 'electronic', 'edm', 'house', 'techno',
        'dubstep', 'trap', 'hip hop', 'rap', 'r&b', 'soul', 'blues', 'jazz',
        'country', 'folk', 'indie', 'alternative', 'grunge', 'punk',
        'reggae', 'ska', 'latin', 'reggaeton', 'salsa', 'bachata', 'merengue',
        
        // Palavras em ingl√™s comuns
        'love', 'heart', 'baby', 'girl', 'boy', 'night', 'day', 'time',
        'life', 'world', 'dream', 'fire', 'light', 'dark', 'heaven', 'hell',
        'angel', 'devil', 'star', 'moon', 'sun', 'rain', 'storm', 'wind',
        'ocean', 'river', 'mountain', 'road', 'home', 'away', 'forever',
        'never', 'always', 'tonight', 'yesterday', 'tomorrow', 'memory',
        'feeling', 'emotion', 'passion', 'desire', 'freedom', 'power',
        'magic', 'miracle', 'destiny', 'future', 'past', 'present',
        
        // Express√µes em ingl√™s
        'i love you', 'my heart', 'in the night', 'all night long',
        'dancing queen', 'rock and roll', 'shake it off', 'let it go',
        'don\'t stop', 'can\'t stop', 'hold on', 'let me', 'take me',
        'show me', 'tell me', 'give me', 'make me', 'break me',
        'save me', 'help me', 'kiss me', 'touch me', 'hold me',
        'love me', 'need me', 'want me', 'miss me', 'leave me',
        
        // Palavras em espanhol
        'amor', 'coraz√≥n', 'vida', 'noche', 'd√≠a', 'tiempo', 'mundo',
        'sue√±o', 'fuego', 'luz', 'cielo', 'tierra', 'mar', 'sol', 'luna',
        'estrella', 'casa', 'camino', 'siempre', 'nunca', 'todo', 'nada',
        'mi amor', 'te amo', 'mi vida', 'mi coraz√≥n', 'para siempre',
        'despacito', 'gasolina', 'bailando', 'vivir', 'sentir', 'amar',
        
        // Artistas/bandas claramente internacionais
        'featuring', 'feat', 'ft', 'remix', 'acoustic', 'live', 'version',
        'radio edit', 'extended', 'club mix', 'original mix'
    ]
};

/**
 * üîç FUN√á√ÉO PRINCIPAL DE CLASSIFICA√á√ÉO
 * Classifica automaticamente o g√™nero baseado no artista e t√≠tulo
 */
function classifyGenre(artist, title = '') {
    if (!artist) {
        return {
            genre: 'outros',
            confidence: 0,
            method: 'default',
            details: 'Artista n√£o fornecido'
        };
    }
    
    // Normalizar nome do artista
    const normalizedArtist = normalizeArtistName(artist);
    
    // 1. Buscar no mapeamento direto de artistas (normalizar chaves tamb√©m)
    for (const [mappedArtist, genre] of Object.entries(ARTIST_GENRE_MAP)) {
        if (normalizeArtistName(mappedArtist) === normalizedArtist) {
            return {
                genre: genre,
                confidence: 95,
                method: 'artist_direct_match',
                details: `Artista encontrado no mapeamento: ${mappedArtist}`
            };
        }
    }
    
    // 2. Buscar varia√ß√µes do nome do artista
    const artistVariations = generateArtistVariations(normalizedArtist);
    for (const variation of artistVariations) {
        if (ARTIST_GENRE_MAP[variation]) {
            return {
                genre: ARTIST_GENRE_MAP[variation],
                confidence: 85,
                method: 'artist_variation_match',
                details: `Varia√ß√£o encontrada: ${variation}`
            };
        }
    }
    
    // 3. Classificar por palavras-chave no t√≠tulo
    const keywordResult = classifyByKeywords(title);
    if (keywordResult.genre !== 'outros') {
        return keywordResult;
    }
    
    // 4. Classificar por padr√µes do artista
    const patternResult = classifyByArtistPatterns(normalizedArtist);
    if (patternResult.genre !== 'outros') {
        return patternResult;
    }
    
    // 5. Retorno padr√£o
    return {
        genre: 'outros',
        confidence: 0,
        method: 'no_match',
        details: 'Nenhum padr√£o identificado'
    };
}

/**
 * üîß NORMALIZAR NOME DO ARTISTA
 * Remove acentos, converte para min√∫sculas e padroniza
 */
function normalizeArtistName(artist) {
    return artist
        .toLowerCase()
        .normalize('NFD')
        .replace(/[\u0300-\u036f]/g, '')
        .trim();
}

/**
 * üîÑ GERAR VARIA√á√ïES DO NOME DO ARTISTA
 * Cria varia√ß√µes comuns (& vs e, feat., etc.)
 */
function generateArtistVariations(artist) {
    const variations = [artist];
    
    // Trocar & por e
    if (artist.includes('&')) {
        variations.push(artist.replace(/&/g, 'e'));
    }
    
    // Trocar e por &
    if (artist.includes(' e ')) {
        variations.push(artist.replace(/ e /g, ' & '));
    }
    
    // Remover feat., ft., featuring
    const featRegex = /\s*(feat\.|ft\.|featuring)\s*.*/i;
    if (featRegex.test(artist)) {
        variations.push(artist.replace(featRegex, '').trim());
    }
    
    return variations;
}

/**
 * üîç CLASSIFICAR POR PALAVRAS-CHAVE
 * Analisa o t√≠tulo da m√∫sica em busca de palavras-chave
 */
function classifyByKeywords(title) {
    if (!title) {
        return {
            genre: 'outros',
            confidence: 0,
            method: 'no_title',
            details: 'T√≠tulo n√£o fornecido'
        };
    }
    
    const normalizedTitle = title.toLowerCase()
        .normalize('NFD')
        .replace(/[\u0300-\u036f]/g, '');
    
    for (const [genre, keywords] of Object.entries(GENRE_KEYWORDS)) {
        for (const keyword of keywords) {
            if (normalizedTitle.includes(keyword.toLowerCase())) {
                return {
                    genre: genre,
                    confidence: 60,
                    method: 'keyword_match',
                    details: `Palavra-chave encontrada: "${keyword}"`
                };
            }
        }
    }
    
    return {
        genre: 'outros',
        confidence: 0,
        method: 'no_keyword_match',
        details: 'Nenhuma palavra-chave encontrada'
    };
}

/**
 * üé® CLASSIFICAR POR PADR√ïES DO ARTISTA
 * Identifica padr√µes comuns nos nomes dos artistas
 */
function classifyByArtistPatterns(artist) {
    if (!artist) {
        return {
            genre: 'outros',
            confidence: 0,
            method: 'no_artist',
            details: 'Artista n√£o fornecido'
        };
    }
    
    const lowerArtist = artist.toLowerCase();
    
    // Padr√µes de MC (Funk)
    if (lowerArtist.startsWith('mc ')) {
        return {
            genre: 'funk',
            confidence: 40,
            method: 'artist_pattern',
            details: 'Padr√£o MC detectado'
        };
    }
    
    // Padr√µes de duplas sertanejas
    if (lowerArtist.includes(' & ') || lowerArtist.includes(' e ')) {
        // Verificar se n√£o √© pagode (grupos como "Grupo Revela√ß√£o")
        if (!lowerArtist.includes('grupo')) {
            return {
                genre: 'sertanejo',
                confidence: 40,
                method: 'artist_pattern',
                details: 'Padr√£o de dupla sertaneja detectado'
            };
        }
    }
    
    // Padr√µes de grupos de pagode
    if (lowerArtist.includes('grupo ') || lowerArtist.includes('raca ')) {
        return {
            genre: 'pagode',
            confidence: 40,
            method: 'artist_pattern',
            details: 'Padr√£o de grupo de pagode detectado'
        };
    }
    
    return {
        genre: 'outros',
        confidence: 0,
        method: 'no_pattern_match',
        details: 'Nenhum padr√£o de artista identificado'
    };
}

/**
 * üìä CORRIGIR G√äNEROS EM LOTE
 * Fun√ß√£o para corrigir g√™neros de m√∫ltiplas m√∫sicas
 */
function correctGenresInBatch(songs) {
    const corrections = [];
    
    for (const song of songs) {
        const currentGenre = song.genre || 'outros';
        const suggestedGenre = classifyGenre(song.artist, song.title);
        
        if (currentGenre !== suggestedGenre) {
            corrections.push({
                id: song.id,
                title: song.title,
                artist: song.artist,
                currentGenre: currentGenre,
                suggestedGenre: suggestedGenre,
                confidence: calculateConfidence(song.artist, song.title, suggestedGenre)
            });
        }
    }
    
    return corrections;
}

/**
 * üéØ CALCULAR CONFIAN√áA DA CLASSIFICA√á√ÉO
 * Retorna um score de confian√ßa (0-100) para a classifica√ß√£o
 */
function calculateConfidence(artist, title, suggestedGenre) {
    let confidence = 0;
    
    // Alta confian√ßa se artista est√° no mapeamento direto
    if (ARTIST_GENRE_MAP[normalizeArtistName(artist)]) {
        confidence = 95;
    }
    // M√©dia confian√ßa se encontrou por varia√ß√£o do artista
    else if (generateArtistVariations(normalizeArtistName(artist)).some(v => ARTIST_GENRE_MAP[v])) {
        confidence = 85;
    }
    // Baixa confian√ßa se classificou por palavras-chave
    else if (classifyByKeywords(title) === suggestedGenre) {
        confidence = 60;
    }
    // Muito baixa confian√ßa se classificou por padr√£o do artista
    else if (classifyByArtistPattern(normalizeArtistName(artist)) === suggestedGenre) {
        confidence = 40;
    }
    
    return confidence;
}

/**
 * üìà ESTAT√çSTICAS DE G√äNEROS
 * Gera estat√≠sticas dos g√™neros encontrados
 */
function generateGenreStats(songs) {
    const stats = {};
    
    for (const song of songs) {
        const genre = song.genre || 'outros';
        stats[genre] = (stats[genre] || 0) + 1;
    }
    
    return Object.entries(stats)
        .sort(([,a], [,b]) => b - a)
        .map(([genre, count]) => ({ genre, count }));
}

// Exportar fun√ß√µes para uso em outros arquivos
if (typeof module !== 'undefined' && module.exports) {
    // Node.js
    module.exports = {
        classifyGenre,
        correctGenresInBatch,
        calculateConfidence,
        generateGenreStats,
        ARTIST_GENRE_MAP,
        GENRE_KEYWORDS
    };
} else {
    // Browser - tornar fun√ß√µes globais
    window.classifyGenre = classifyGenre;
    window.correctGenresInBatch = correctGenresInBatch;
    window.calculateConfidence = calculateConfidence;
    window.generateGenreStats = generateGenreStats;
    window.ARTIST_GENRE_MAP = ARTIST_GENRE_MAP;
    window.GENRE_KEYWORDS = GENRE_KEYWORDS;
}